# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.chrome.options import Options

class TestSmokeTest():
  def setup_method(self, method):
    options = Options()
    options.add_argument("--headless=new")
    self.driver = webdriver.Chrome(options=options)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_test1LogoHeaderandTitle(self):
    self.driver.get("http://127.0.0.1:5500/teton/1.6/index.html")
    self.driver.set_window_size(1050, 660)
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".header-logo img")
    assert len(elements) > 0
    assert self.driver.find_element(By.CSS_SELECTOR, ".header-title > h1").text == "Teton Idaho"
    assert self.driver.find_element(By.CSS_SELECTOR, ".header-title > h2").text == "Chamber of Commerce"
    assert self.driver.title == "Teton Idaho CoC"
  
  def test_test2HomePageSpotlightsandJoinFeature(self):
    self.driver.get("http://127.0.0.1:5500/teton/1.6/index.html")
    self.driver.set_window_size(1280, 720)
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".spotlight1")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".spotlight2")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.LINK_TEXT, "Join Us")
    assert len(elements) > 0
    self.driver.find_element(By.LINK_TEXT, "Join Us").click()
    WebDriverWait(self.driver, 10).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "form")))
    WebDriverWait(self.driver, 150).until(expected_conditions.visibility_of_element_located((By.NAME, "fname")))
  
  def test_test3DirectoryGridandListFeature(self):
    self.driver.get("http://127.0.0.1:5500/teton/1.6/directory.html")
    self.driver.set_window_size(1280, 720)
    self.driver.find_element(By.ID, "directory-grid").click()
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".directory-cards")))
    assert self.driver.find_element(By.XPATH, "//p[contains(text(), \'Teton Turf and Tree\')]").text == "Teton Turf and Tree"
    self.driver.find_element(By.ID, "directory-list").click()
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".directory-list")))
    assert self.driver.find_element(By.XPATH, "//p[contains(text(), \'Teton Turf and Tree\')]").text == "Teton Turf and Tree"
  
  def test_test4JoinPageDataEntry(self):
    self.driver.get("http://127.0.0.1:5500/teton/1.6/join.html")
    self.driver.set_window_size(1280, 720)
    WebDriverWait(self.driver, 10).until(expected_conditions.visibility_of_element_located((By.NAME, "fname")))
    elements = self.driver.find_elements(By.NAME, "fname")
    assert len(elements) > 0
    self.driver.find_element(By.NAME, "fname").send_keys("Anana")
    self.driver.find_element(By.NAME, "lname").send_keys("Ezikpe")
    self.driver.find_element(By.NAME, "bizname").send_keys("Teton Corporation")
    self.driver.find_element(By.NAME, "biztitle").send_keys("Manager")
    self.driver.find_element(By.CSS_SELECTOR, "[value=\'Next Step\']").click()
    WebDriverWait(self.driver, 20).until(expected_conditions.visibility_of_element_located((By.NAME, "email")))
    elements = self.driver.find_elements(By.NAME, "email")
    assert len(elements) > 0
  
  def test_test5AdminPageUsernamePassword(self):
    self.driver.get("http://127.0.0.1:5500/teton/1.6/admin.html")
    self.driver.set_window_size(1280, 720)
    WebDriverWait(self.driver, 10).until(expected_conditions.visibility_of_element_located((By.NAME, "username")))
    elements = self.driver.find_elements(By.NAME, "username")
    assert len(elements) > 0
    self.driver.find_element(By.NAME, "username").send_keys("incorrectUser")
    self.driver.find_element(By.NAME, "password").send_keys("wrongPass")
    self.driver.find_element(By.CSS_SELECTOR, ".mysubmit").click()
    WebDriverWait(self.driver, 10).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".errorMessage")))
    assert self.driver.find_element(By.CSS_SELECTOR, ".errorMessage").text == "Invalid username and password."
  
